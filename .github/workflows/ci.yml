name: CI

env:
  USER: Irabeny
  EMAIL: irabeny89@gmail.com
  COMMIT-MSG: "chore: auto version bump [skip ci]"

permissions:
  contents: write
  id-token: write

on:
  push:
    branches:
      - main

  pull_request: 
    branches: 
      - main

jobs:
  # 1
  test_and_publish:
    name: Run Tests And Publish To JSR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install Dependencies
        run: bun install

      - name: Format And Lint
        run: bun run check

      - name: Test Code
        run: bun test

      - name: Get Next Version
        id: get_next_version
        uses: thenativeweb/get-next-version@main

      - name: Update Version If Available
        if: steps.get_next_version.outputs.hasNextVersion
        run: |
          echo updating version in files
          NEXT_VERSION=${{ steps.get_next_version.outputs.version }} bun bump-version.ts

          echo "generating changelog"
          cog changelog
        
      - name: Check For Changes
        id: check_changes
        run: |
          git diff --exit-code
          if [[ -n $(git status --porcelain) ]]; then
            echo "Change found to commit"
            echo "changes=true" >> "$GITHUB_OUTPUT";
          else
            echo "No change to commit."
            echo "changes=false" >> "$GITHUB_OUTPUT"; 
          fi

      - name: Commit and Push Changes If Available
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "${GITHUB_ACTOR}"

          git add .
          git commit -m "chore: version auto bump -> ${{ steps.get_next_version.outputs.version }}"
          git push origin main

      - name: Publish To JSR
        run: bunx jsr publish --allow-dirty

  # 2
  changelog_release:
    name: Check Commit, Generate Changelog and Upload Release On Github
    needs: test_and_publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # pick the pr HEAD instead of the merge commit
          ref: ${{ github.event.pull_request.head.sha }}
          
      - name: Conventional Commit Check
        uses: cocogitto/cocogitto-action@v3

      - name: Semver Release
        uses: cocogitto/cocogitto-action@v3
        id: release
        with:
          release: true
          git-user: '${{ env.USER }}'
          git-user-email: '${{env.EMAIL}}'
          
      # The version number is accessible as a github action output
      - name: Print Version
        run: "echo '${{ steps.release.outputs.version }}'"

      - name: Generate Changelog
        run: cog changelog --at ${{ steps.release.outputs.version }} -t full_hash > GITHUB_CHANGELOG.md  
          
      - name: Upload Github Release
        id: gh-release
        uses: softprops/action-gh-release@v2
        with:
          body_path: GITHUB_CHANGELOG.md
          tag_name: ${{ steps.release.outputs.version }}