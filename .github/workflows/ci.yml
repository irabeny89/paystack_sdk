name: CI

env:
  USER: Irabeny
  EMAIL: irabeny89@gmail.com

permissions:
  contents: write
  id-token: write

on:
  push:
    branches:
      - main

  pull_request: 
    branches: 
      - main

jobs:
  lint_and_commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install Dependencies
        run: bun install

      - name: Format And Lint
        run: bun run check

      - name: Check For Changes
        id: format_and_lint_changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "format_and_lint_changes=true" >> "$GITHUB_OUTPUT";
          fi

      - name: Commit Format And Lint Changes If Available
        if: steps.format_and_lint_changes.outputs.format_and_lint_changes == 'true'
        run: |
          git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "${GITHUB_ACTOR}"

          git add .
          git commit -m "style: format and lint"

      - name: Get Next Version
        id: get_next_version
        uses: thenativeweb/get-next-version@main
      
      - name: Update Version If Available
        if: steps.get_next_version.outputs.hasNextVersion
        run: |
          echo "updating version in files"
          NEXT_VERSION=${{ steps.get_next_version.outputs.version }} bun bump-version.ts

      - name: Check For Changes
        id: version_bump_changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "version_bump=true" >> "$GITHUB_OUTPUT";
          fi

      - name: Commit Version Bump Changes If Available
        if: steps.version_bump_changes.outputs.version_bump == 'true'
        run: |
          git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "${GITHUB_ACTOR}"
          
          git add .
          git commit -m "chore: version bump to ${{ steps.get_next_version.outputs.version }}"

      - name: Run Test
        run: bun test

      - name: Push Changes
        run: git push origin main
                    
  release_and_publish:
    needs: lint_and_commit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # pick the pr HEAD instead of the merge commit
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install Dependencies
        run: bun install
          
      - name: Conventional Commit and Semver Release
        uses: cocogitto/cocogitto-action@v3
        id: release
        with:
          release: true
          git-user: '${{ env.USER }}'
          git-user-email: '${{env.EMAIL}}'
          
      # The version number is accessible as a github action output
      - name: Print Version
        run: "echo '${{ steps.release.outputs.version }}'"

      - name: Generate Github Release Changelog
        run: cog changelog --at ${{ steps.release.outputs.version }} -t full_hash > GITHUB_CHANGELOG.md  
          
      - name: Upload Github Release
        id: gh-release
        uses: softprops/action-gh-release@v2
        with:
          body_path: GITHUB_CHANGELOG.md
          tag_name: ${{ steps.release.outputs.version }}

      - name: Publish To JSR
        run: bunx jsr publish --allow-dirty
  